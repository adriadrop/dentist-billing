{#
/**
 * @file
 * Caspers theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
<body class="post-template tag-speeches nav-closed">

  <header class="main-header post-head " style="background-image: url({{ file_url(node.field_image.entity.fileuri)}})">
        <nav class="main-nav overlay clearfix">
            <a class="blog-logo" href="/"><img src="{{ website_logo }}" ></a>
            <a class="menu-button icon-menu" href="#"><span class="word">{{ "Menu"|t }}</span></a>
        </nav>
    </header>
<article class="post articles">
    <header class="post-header">
        <h1 class="post-title">{{ label }}</h1>
        <section class="post-meta">
            {% set createdDate = node.getCreatedTime|date('j F Y') %}
            {% set createdDateD = node.getCreatedTime|date('Y-m-j') %}
            <time class="post-date" datetime="{{ createdDateD }}">{{ createdDate }}</time>
        </section>
    </header>
    <div>
        {{ content|without('field_image') }}
    </div>

<footer class="post-footer">
    <figure class="author-image">
        <a class="img" style="background-image: url({{ field_profile_picture }})"></a>
    </figure>
    <section class="author">
        <h4>{{ field_full_name }} ({{ author_name }})</h4>
        <p class="user-bio">{{ field_bio }}</p>
        <div class="author-meta">
         {% if field_website %}
         <span class="author-link icon-link"><a href="{{ field_website }}">{{ field_website }}</a></span>
         {% endif %}
        </div>
    </section>

    {%  if field_twitter or field_facebook or field_google_ %}
    <section class="share">
        <h4>Share this post</h4>
        {% if field_twitter %}
            <a class="icon-twitter" href="{{ field_twitter }}" onclick="window.open(this.href, 'twitter-share', 'width=550,height=235');return false;">
                <span class="hidden">Twitter</span>
            </a>
        {% endif %}

        {% if field_facebook %}
            <a class="icon-facebook" href="{{ field_facebook }}" onclick="window.open(this.href, 'facebook-share','width=580,height=296');return false;">
                <span class="hidden">Facebook</span>
            </a>
        {% endif %}

        {% if field_google_ %}
            <a class="icon-google-plus" href="{{ field_google_ }}" onclick="window.open(this.href, 'google-plus-share', 'width=490,height=530');return false;">
                <span class="hidden">Google+</span>
            </a>
        {% endif %}
    </section>
    {% endif %}
</footer>
</article>
</body>
